# Generated by Django 3.1.4 on 2021-01-04 18:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coins', models.IntegerField(default=0)),
                ('room_id', models.CharField(max_length=100)),
                ('player_one', models.CharField(blank=True, max_length=10, null=True)),
                ('player_two', models.CharField(blank=True, max_length=10, null=True)),
                ('requested_players', models.CharField(default=',', max_length=500)),
                ('is_over', models.BooleanField(default=False)),
                ('state', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('CREATED', 'CREATED'), ('RUNNING', 'RUNNING'), ('WAITING', 'WAITING'), ('OVER', 'OVER')], default='CREATED', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('room_code', models.CharField(blank=True, max_length=100, null=True)),
                ('game_creater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('result_by_player_one', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='result_by_player_one', to=settings.AUTH_USER_MODEL)),
                ('result_by_player_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='result_by_player_two', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(choices=[('PENDING', 'PENDING'), ('WON', 'WON'), ('LOST', 'LOST'), ('CANCEL', 'CANCEL'), ('DISPUTED', 'DISPUTED'), ('QUIT', 'QUIT')], default='PENDING', max_length=25)),
                ('reason_of_cancel', models.TextField(blank=True, null=True)),
                ('winning_amount', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_image', models.ImageField(upload_to='static/images')),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('game_result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.gameresult')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DisputedGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_reviewed', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
